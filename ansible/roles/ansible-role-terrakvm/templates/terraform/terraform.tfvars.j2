#jinja2: lstrip_blocks: "True", trim_blocks: "True"
{% if networks is defined %}
    {% for net in networks %}
{{ net.name }} = "{{ net.name }}"
{{ net.name }}_mode =  "{{ net.mode }}"
{{ net.name }}_dhcp = "{{ net.dhcp }}"
{{ net.name }}_cidr =  "{{ net.cidr }}"
{{ net.name }}_autostart = "{{ net.autostart }}"
{{ net.name }}_bridge = "{{ net.bridge }}"
    {% endfor %}
{% endif %}
ssh_username = "{{ ssh_username }}"
ssh_public_key = "{{ ssh_public_key | b64decode }}"
ssh_private_key_file = "./{{ project_name }}.pkey"
volume_pool =  "{{ volume_pool | default('default') }}"
cloudinit_iso = "{{ cloudinit_iso_name | default('cloudinit.iso') }}"

{% for vm in vms %}
    {% for disk in vm.disks %}
      {% if disk.type is undefined or disk.type != "iso" %}
        {% if disk.size is defined and (disk.source is undefined or disk.source != "/dev/zero") %}
{{ vm.vm_name }}_{{ disk.name }}_base = "{{vm.vm_name }}_{{ disk.name }}_base"
        {% endif %}
{{ vm.vm_name }}_{{ disk.name }} = "{{vm.vm_name }}_{{ disk.name }}"
{{ vm.vm_name }}_{{ disk.name }}_pool = "{{ disk.pool | default('default') }}"
        {% if disk.size is defined %}
{{ vm.vm_name }}_{{ disk.name }}_size = "{{ disk.size }}"
        {% endif %}
        {% if disk.base_volume_name is defined %}
{{ vm.vm_name }}_{{ disk.name }}_base_volume_name = "{{ disk.base_volume_name }}"
{{ vm.vm_name }}_{{ disk.name }}_base_volume_pool = "{{ disk.base_volume_pool | default('default') }}"
        {% endif %}
      {% endif %}
      {% if disk.source is defined %}
{{ vm.vm_name }}_{{ disk.name }}_source = "{{ disk.source }}"
      {% else %}
        {% if vm.method is undefined or vm.method == "cloud" %}
          {% set terraform_loop_iso_filter = "[?distro=='"+ vm.distro +"' && arch=='" + vm.arch +"'].iso_name" %}
{{ vm.vm_name }}_{{ disk.name }}_source = "{{ download_cache_dir }}/{{ cloud_images | json_query(terraform_loop_iso_filter) | join('')}}"
        {% elif vm.method == "packer" %}
{{ vm.vm_name }}_{{ disk.name }}_source = "{{ packer_dir }}/{{ vm.vm_name }}/output/{{ vm.vm_name }}"
        {% elif vm.method == "iso" %}
          {% set terraform_loop_iso_filter = "[?distro=='"+ vm.distro +"' && arch=='" + vm.arch +"'].virt_source" %}
{{ vm.vm_name }}_{{ disk.name }}_source = "{{ iso_images | json_query(terraform_loop_iso_filter) | join('')}}"
        {% endif %}
      {% endif %}
    {% endfor %}
    {% for vm_net in vm.networks %}
        {% if vm_net.bridge is not defined %}
{{ vm.vm_name }}_{{ vm_net.network_name }} = "{{ vm_net.network_name }}"
            {% if vm_net.address is defined %}
{{ vm.vm_name }}_{{ vm_net.network_name }}_address = "{{ vm_net.address }}"
            {% endif %}
        {% endif %}
    {% endfor %}
{{ vm.vm_name }}_hostname = "{{ vm.hostname }}"
{{ vm.vm_name }}_ncpu = "{{ vm.ncpu | default('2') }}"
{{ vm.vm_name }}_memory = "{{ vm.memory | default('2048') }}"
{{ vm.vm_name }}_vm_name = "{{ vm.vm_name }}"
{% endfor %}
