- name: Create project directory
  file:
    path: "{{ terraform_dir }}"
    state: directory
    mode: 0700
  tags:
    - always

- name: Template terraform instructions
  template:
    src: "terraform/{{ item.name }}.j2"
    dest: "{{ terraform_dir }}/{{ item.name }}"
  with_items:
    - { name: "provider.tf" }
    - { name: "vars.tf" }
    - { name: "terraform.tfvars" }
  tags:
    - template


- name: Process Networks
  template:
    src: "terraform/{{ item.name }}.j2"
    dest: "{{ terraform_dir }}/{{ item.name }}"
  with_items:
    - { name: "network.tf" }
  when: networks | length > 0
  tags:
    - template

- name: Process Volumes
  template:
    src: "terraform/{{ item.name }}.j2"
    dest: "{{ terraform_dir }}/{{ item.name }}"
  with_items:
    - { name: "volume.tf" }
  when: volumes | length > 0
  tags:
    - template

- name: Process Instances
  template:
    src: "terraform/{{ item.name }}.j2"
    dest: "{{ terraform_dir }}/{{ item.name }}"
  with_items:
    - { name: "instance.tf" }
  when: instances | length > 0
  tags:
    - template

- name: Destroy current infrastructure
  terraform:
    project_path: "{{ terraform_dir }}"
    state: absent
  when: force_rebuild
  tags:
    - apply

- name: Deploy via terraform
  terraform:
    project_path: "{{ terraform_dir }}"
    state: present
    force_init: true
  register: terraform_output
  tags:
    - apply
