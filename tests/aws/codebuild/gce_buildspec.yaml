version: 0.2
env:
  variables:
    TF_VERSION: "0.11.8"
    SSM_REGION: "eu-west-1"
phases:
  install:
    commands:
      - cd /usr/bin
      - curl -s -qL -o terraform.zip "https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip"
      - unzip -o terraform.zip
      - pip install ansible
      - echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add -
      - apt-get update -y
      - apt-get install google-cloud-sdk -y --force-yes 
      - apt-get install -y jq
  pre_build:
    commands:
      - cd "$CODEBUILD_SRC_DIR"
      - cd tests/terraform/google_cloud/test_support/
      - . "./deployment_env.sh"
      - terraform init -backend-config "bucket=$TF_ENV_tf_state_bucket" -backend-config "region=$TF_ENV_aws_region" -backend-config "key=$TF_ENV_state_key"
      - terraform plan -out=tfplan
      - terraform apply tfplan
      - gcloud auth activate-service-account --key-file "$GCLOUD_KEYFILE_JSON" --project "$GOOGLE_PROJECT"
      - gcloud compute config-ssh
  build:
    commands:
      - cd "$CODEBUILD_SRC_DIR"
      - cd tests/ansible
      - ansible -m ping -i inventory/terrakvm.gcp.yml all
  post_build:
    commands:
      - cd "$CODEBUILD_SRC_DIR"
      - cd tests/terraform/google_cloud/test_support
      - terraform init -backend-config "bucket=$TF_ENV_tf_state_bucket" -backend-config "region=$TF_ENV_aws_region" -backend-config "key=$TF_ENV_state_key"
      - terraform plan -out=tfplan -destroy
      - terraform apply tfplan
artifacts:
  files:
    - '**/*'
